tosca_definitions_version: cloudify_dsl_1_3

imports:
  - http://www.getcloudify.org/spec/cloudify/4.5/types.yaml
  - plugin:cloudify-openstack-plugin
  - plugin:cloudify-utilities-plugin
  - types.yaml



inputs:

  keystone_username:
    default: { get_secret: keystone_username }

  keystone_password:
    default: { get_secret: keystone_password }

  keystone_tenant_name:
    default: { get_secret: keystone_tenant_name }

  keystone_url:
    default: { get_secret: keystone_url }

  region:
    default: { get_secret: region }

  image:
    type: string
    default: { get_secret: ubuntu_trusty_image }

  flavor:
    type: string
    default: { get_secret: small_image_flavor }

  network:
    type: string
    default: { get_secret: private_network_name }

  external_network:
    type: string
    default: { get_secret: external_network_name }

  agent_user:
    type: string
    default: ubuntu

  agent_key_public:
    type: string
    default: { get_secret: agent_key_public }

  agent_key_private:
    type: string
    default: { get_secret: agent_key_private }



  configuration:
    default:
      wifi:
        enabled: true
        ESSID: "WifiNetwork"
        channel: "8"
      VOIPNetwork:
        subnet: "192.168.1.0"
        netmask: "255.255.255.0"
        vlan: "30"
      GuestNetwork:
        subnet: "192.168.2.0"
        netmask: "255.255.255.0"
        vlan: "36"
      uplink:
        gateway_ip: "145.88.90.1"
        vlan: "50"
      lan:
        - port: 2
          vlan: 36
        - port: 1
          vlan: 30
        - port: 5
          vlan: 50


dsl_definitions:

  openstack_config: &openstack_config
    username: { get_input: keystone_username }
    password: { get_input: keystone_password }
    tenant_name: { get_input: keystone_tenant_name }
    auth_url: { get_input: keystone_url }
    region: { get_input: region }


node_templates:


  config_holder:
    type: configuration_loader
    properties:
      parameters_json: { get_input: configuration }


# infrastructure openstack stuff
  sg:
    type: cloudify.openstack.nodes.SecurityGroup
    properties:
      description: "Webserver SG"
      rules:
      - remote_ip_prefix: 0.0.0.0/0
        port_range_min: 22
        port_range_max: 22
        protocol: tcp
      - remote_ip_prefix: 0.0.0.0/0
        port_range_min: 80
        port_range_max: 80
        protocol: tcp
      - remote_ip_prefix: 0.0.0.0/0
        port_range_min: 5671
        port_range_max: 5671
        protocol: tcp
      - remote_ip_prefix: 0.0.0.0/0
        port_range_min: 53333
        port_range_max: 53333
        protocol: tcp
      openstack_config: *openstack_config


  cloudify_host_cloud_config:
    type: cloudify.nodes.CloudInit.CloudConfig
    properties:
      resource_config:
        users:
        - name: { get_input: agent_user }
          groups: sudo
          shell: /bin/bash
          sudo: ['ALL=(ALL) NOPASSWD:ALL']
          ssh-authorized-keys:
          - { get_input: agent_key_public }

  site_cpe_ip:
    type: cloudify.openstack.nodes.FloatingIP
    properties:
      openstack_config: *openstack_config
      floatingip:
        floating_network_name: { get_input: external_network }

  switch_ip:
    type: cloudify.openstack.nodes.FloatingIP
    properties:
      openstack_config: *openstack_config
      floatingip:
        floating_network_name: { get_input: external_network }

# Device Nodes

  site_cpe:
    type: openstack_host
    properties:
      openstack_config: *openstack_config
    relationships:
      - type: cloudify.relationships.depends_on
        target: cloudify_host_cloud_config
      - type: cloudify.openstack.server_connected_to_security_group
        target: sg
      - type: cloudify.openstack.server_connected_to_floating_ip
        target: site_cpe_ip


  site_switch:
    type: openstack_host
    properties:
      openstack_config: *openstack_config
    relationships:
      - type: cloudify.relationships.depends_on
        target: cloudify_host_cloud_config
      - type: cloudify.openstack.server_connected_to_security_group
        target: sg
      - type: cloudify.openstack.server_connected_to_floating_ip
        target: switch_ip


# Configuration Nodes

  cpe_configuration:
    type: network_equipment
    properties:
      params_list:
        - wifi
        - VOIPNetwork
        - GuestNetwork
        - uplink
    relationships:
      - type: cloudify.relationships.contained_in
        target: site_cpe
      - type: load_from_config
        target: config_holder


  switch_configuration:
    type: network_equipment
    properties:
      params_list:
        - lan
        - uplink
    relationships:
      - type: cloudify.relationships.contained_in
        target: site_switch
      - type: load_from_config
        target: config_holder


outputs:
  cep_ip:
    value: { get_attribute: [ site_cpe_ip, floating_ip_address ]}

  switch_ip:
    value: { get_attribute: [ switch_ip, floating_ip_address ]}

workflows:



  LanUpdate:
    mapping: configuration.cloudify_configuration.tasks.update
    parameters:
      params:
        default:
         lan:
           - port: 1
             vlan: 11
           - port: 2
             vlan: 22
           - port: 3
             vlan: 33
      configuration_node_id:
        default: config_holder
      merge_dict:
        default: false
      node_types_to_update:
        default:
          - network_equipment

  WifiUpdate:
    mapping: configuration.cloudify_configuration.tasks.update
    parameters:
      params:
        default:
         wifi:
           enabled: false
           ESSID: "MyWifi"
           channel: "10"
      configuration_node_id:
        default: config_holder
      merge_dict:
        default: false
      node_types_to_update:
        default:
          - network_equipment
